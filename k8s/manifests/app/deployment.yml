apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sm-app-deploy
  name: sm-app-deploy
spec:
  selector:
    matchLabels:
      app: social-media
  template:
    metadata:
      labels:
        app: social-media
      name: sm-app-pod-name
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: sm-app-container
          image: sm-image:1.0.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: HOSTNAME
                  name: sm-app-config-map
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: sm-app-config-map
                  key: PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DATABASE
                  name: sm-app-config-map
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: MYSQL_USER
                  name: sm-app-secret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MYSQL_PASSWORD
                  name: sm-app-secret
            - name: SPRING_PROFILE_ACTIVE
              valueFrom:
                configMapKeyRef:
                  key: SPRING_PROFILE_ACTIVE
                  name: sm-app-config-map
          # Health checks
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
            initialDelaySeconds: 60   # prévention du temps de démerrage de spring
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          securityContext:
            allowPrivilegeEscalation: false # Empêcher à un attaquant de pouvoir avoir plus de privilège que l'utilisateur spring
#            readOnlyRootFilesystem: true # à voir et comprendre plus en détail
#            capabilities:
#              drop:
#                - ALL